name: Build and Push into Azure Cloud

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  # Azure App Name
  APP_NAME: TweeTok
  # Azure Resource Group
  RESOURCE_GROUP: ResourceGroup
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Extract lowercase repository name
      - name: set lower case owner name
        run: |
          echo "REPOSITORY_LC=${REPOSITORY,,}" >>${GITHUB_ENV}
        env:
          REPOSITORY: '${{ github.repository }}'

      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            PORT=80
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      # Login into Azure
      - uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      # Make sure Azure App service is authentificated
      - name: Set Web App ACR authentication
        uses: Azure/appservice-settings@v1
        with:
         app-name: ${{ env.APP_NAME }}
         app-settings-json: |
           [
               {
                   "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                   "value": "${{ secrets.DOCKER_PULL_TOKEN }}",
                   "slotSetting": false
               },
               {
                   "name": "DOCKER_REGISTRY_SERVER_URL",
                   "value": "https://${{ env.REGISTRY }}",
                   "slotSetting": false
               },
               {
                   "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                   "value": "${{ github.actor }}",
                   "slotSetting": false
               }
           ]

      # Retreive Azure Resource profile
      - name: Get WebApp publish profile
        id: publish_profile
        uses: aliencube/publish-profile-actions@v1
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          appName: ${{ env.APP_NAME }}

      # Pass image from Package to Azure
      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          publish-profile: ${{ steps.publish_profile.outputs.profile }}
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY_LC }}:sha-${{ github.sha }}

      # Reset Azure Resource profile
      - name: Reset WebApp/FunctionApp publish profile
        uses: aliencube/publish-profile-actions@v1
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          appName: ${{ env.APP_NAME }}
          reset: true
